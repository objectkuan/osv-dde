import static groovy.io.FileType.FILES

apply plugin: 'java'
version = '1.0.0'

dependencies {
  compile group: 'org.crashub' , name:'crash.cli', version:'1.3.0-beta11'
  compile group: 'org.crashub' , name:'crash.shell', version:'1.3.0-beta11'
  compile group: 'org.crashub' , name:'crash.connectors.ssh', version:'1.3.0-beta11'
  compile group: 'jline' , name:'jline', version:'2.10'
  compile project(':cloudius')
}

def services = [
  "org.crsh.plugin.CRaSHPlugin": [
    buildFile: "${buildDir}/plugins/META-INF/services/org.crsh.plugin.CRaSHPlugin",
    match: ~/.*CRaSHPlugin\-\d+/
  ],
  "org.codehaus.groovy.transform.ASTTransformation": [
    buildFile: "${buildDir}/plugins/META-INF/services/org.codehaus.groovy.transform.ASTTransformation",
    match: ~/.*ASTTransformation\-\d+/
  ],
]

task serviceConcat(type:Copy){
  def i = 0
  (configurations.compile.resolvedConfiguration.resolvedArtifacts.collect{ zipTree(it.file)  } +
      fileTree(dir: 'src/main/resources')).each { d ->
    from (d) {
      rename ~/(${services.collect({ it.key }).join("|")})$/, "\$1-${i++}"
	    include 'META-INF/services/**'
    }
  }
  into 'build/plugins'
  doLast {
    services.each { name, props ->
      def serviceFile = new File(props.buildFile)
      // Remote previous content
      if (serviceFile.exists()) {
        serviceFile.delete()
        serviceFile.createNewFile()
      }

      def lines = []
      file('build/plugins/META-INF/services/').eachFileMatch(FILES, props.match) {
        if (!lines.contains(it.text)) {
          lines.add(it.text)
          serviceFile << it.text
        }
      }
    }
  }

  outputs.files services.collect({ name, props -> file(props.buildFile) })
}


jar {
    dependsOn configurations.runtime, serviceConcat
    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
      services.each {
        exclude("META-INF/services/${it.key}")
      }
      exclude('crash/crash.properties')
    }
    services.each { name, props ->
      from(props.buildFile) {
        into 'META-INF/services/'
      }
    }
    exclude('org/bouncycastle/')
    exclude('META-INF/BCKEY.*') 
    exclude('crash/commands/base/login.groovy')
    exclude('crash/commands/base/java.groovy')
    manifest.attributes('Main-Class': 'com.cloudius.cli.Main')
}
