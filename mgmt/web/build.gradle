apply plugin: 'java'

version = '1.0.0'

configurations {
    jruby
}

dependencies {
    jruby 'org.jruby:jruby-complete:1.7.4'
    runtime 'net.lingala.zip4j:zip4j:1.2.3'
    runtime 'org.xeustechnologies:jcl-core:2.3'
    runtime 'com.j256.simplejmx:simplejmx:1.1'
    runtime 'jline:jline:2.10'
    runtime 'org.codehaus.groovy:groovy-all:1.8.9'
    runtime 'ch.qos.logback:logback-classic:1.0.13'
    runtime 'org.slf4j:jul-to-slf4j:1.7.5'
}

sourceSets {
    main {
        resources {
            srcDir 'resources'
        }
    }
}

ext {
    gemsDir = file(projectDir.path + '/vendor/gems')
    bundleDir = file(projectDir.path +'/vendor/bundle/jruby/1.9/')
}

task installBundler(type: JavaExec) {
    outputs.dir gemsDir
    classpath = configurations.jruby
    main = "org.jruby.Main"
    args "-S gem install --no-rdoc --no-ri bundler -i ${gemsDir}".tokenize()

    doFirst {
        gemsDir.mkdirs()
    }
}

task bundleInstall(type: JavaExec, dependsOn: installBundler) {
    environment GEM_HOME: gemsDir, GEM_PATH: gemsDir, PATH: "${gemsDir}/bin/"
    classpath = configurations.jruby
    inputs.file "${projectDir}/Gemfile"
    outputs.dir "${projectDir}/vendor/bundle/"
    main = "org.jruby.Main"
    args "-S bundle install --path=${project.projectDir.path}/vendor/bundle --binstubs".tokenize()
}

task runapp(type: JavaExec, dependsOn: bundleInstall){
    environment GEM_HOME: bundleDir, GEM_PATH: bundleDir
    classpath = project(':crash').jar.outputs.files
            .plus(configurations.jruby)
            .plus(configurations.runtime)
            .plus(sourceSets.main.runtimeClasspath)
    main = "org.jruby.Main"
    jvmArgs = [
      '-Djline.terminal=auto',
      '-Dlog.dir=.',
      "-Djava.util.logging.config.file=${projectDir}/config/logging.properties"
    ]
    standardInput System.in
    args 'bin/app dev'.tokenize()
    doFirst {
        file("${buildDir}/uploads").mkdirs()
	  file("${buildDir}/apps").mkdirs()
    }
}

task test(type: JavaExec, dependsOn: bundleInstall,overwrite: true){
    environment GEM_HOME: "${bundleDir}:${gemsDir}", GEM_PATH: "${bundleDir}:${gemsDir}"
    classpath = project(':crash').jar.outputs.files.plus(configurations.jruby).plus(configurations.runtime)
    main = "org.jruby.Main"
    args '-Itest -Ilib -I. test/test_helper.rb'.tokenize()
    doFirst {
        file("${buildDir}/uploads").mkdirs()
	  file("${buildDir}/apps").mkdirs()
    }

}

task webjar(type: JavaExec, overwrite: true,dependsOn:'bundleInstall') {
  environment GEM_HOME: gemsDir, GEM_PATH: gemsDir
  inputs.dir "${projectDir}/bin"
  outputs.file "${buildDir}/web.jar"
  classpath = configurations.jruby
  main = "org.jruby.Main"
  args "-S bin/puck --extra-files views/** public/**".tokenize()
}


jar {
    dependsOn configurations.runtime, webjar, project(':crash').jar
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    from zipTree("${buildDir}/web.jar").matching({
        exclude '**/jline/**/*' // jruby-core ships with old jline-2.7, we need jline >= 2.10
    })
    manifest.attributes('Main-Class': 'org.jruby.JarBootstrapMain')
}
